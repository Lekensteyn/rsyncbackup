# completion file for do-backup

_do_backup_sources() {
    local cmd config args=()

    # eval for tilde expansion
    printf -v cmd %q "$1"
    printf -v config %q "$2"
    eval "cmd=${cmd/#\\\~/\~}"
    eval "config=${config/#\\\~/\~}"

    type "$cmd" &>/dev/null || return
    [ -z "$config" ] || args+=(-c "$config")

    COMPREPLY=( $(compgen -W "$("$cmd" "${args[@]}" sources |
        awk '/^[^#]/ { print $1 }')" -- "$cur") )
}

_do_backup() {
    local i config arg cur prev words cword
    _init_completion || return

    # "Options"
    case $prev in
    -c)
        _filedir
        return 0
        ;;
    esac

    for (( i=1; i < COMP_CWORD; i++ )); do
        case "${COMP_WORDS[i]}" in
            -c)
                ((i+=1))
                config="${COMP_WORDS[i]}"
                ;;
            -*) ;;
            *)  arg="${COMP_WORDS[i]}"; break ;;
        esac
    done

    if [ -z "$arg" ]; then
        COMPREPLY=( $(compgen -W \
            '-c -n -v -h sources testrsync mount umount dobackup' -- "$cur") )
        return 0
    fi

    case $arg in
    sources)
        ;;
    testrsync)
        _do_backup_sources "$1" "$config"
        ;;
    dobackup)
        _do_backup_sources "$1" "$config"
        ;;
    mount)
        ;;
    umount)
        ;;
    esac

    return 0
}

complete -F _do_backup do-backup
# vim: set ft=sh:
